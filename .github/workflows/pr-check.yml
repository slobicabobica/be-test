
name: Notify Client on Schema Change

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  notify-client:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository with full history
        uses: actions/checkout@v2
        with:
          fetch-depth: 2  # Fetch only the last two commits for comparison

      - name: Fetch latest commit from main branch
        run: |
          git fetch origin main
          MAIN_COMMIT=$(git rev-parse origin/main)
          echo "Main branch commit: $MAIN_COMMIT"
          echo "main_commit=$MAIN_COMMIT" >> $GITHUB_ENV

      - name: Log Current Commit SHA
        run: echo "Current commit SHA: ${{ github.sha }}"

      - name: Check if schema.graphqls content has changed
        id: check_schema
        run: |
          if git diff ${{ env.main_commit }} ${{ github.sha }} -- cdk/assets/schema.graphqls | grep -q '^[-+]'; then
            echo "schema.graphqls has changed"
            echo "schema_changed=true" >> $GITHUB_ENV
          else
            echo "schema.graphqls has not changed"
            echo "schema_changed=false" >> $GITHUB_ENV
          fi

      - name: Get Branch Name
        run: echo "BE_BRANCH=${{ github.head_ref }}" >> $GITHUB_ENV

      - name: Trigger Client Repo Schema Update
        if: env.schema_changed == 'true'
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.CLIENT_REPO_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository_owner }}/fe-test/dispatches \
            -d '{"event_type": "schema-change", "client_payload": { 
            "branch_name": "${{ env.BE_BRANCH }}",
            "pr_number": "${{ github.event.pull_request.number }}",
            "commit_sha": "${{ github.sha }}"
            }}'

      - name: Add Pending Label to PR
        if: env.schema_changed == 'true'
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            -d '{
              "labels": ["Client Compatibility Check Pending"]
            }' \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/labels

      - name: Add Success Label to PR
        if: env.schema_changed == 'false'
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            -d '{
              "labels": ["Client Compatibility Check Passed"]
            }' \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/labels
